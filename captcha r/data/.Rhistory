set2_time <- read.csv("time2.csv")
#boost set2 older time
options(digits = 4)
Expandedset2_time_older <- rnorm(25, mean=mean(set2_time$older), sd=5)
Expandedset2_time_older
#boost set2 younger time
Expandedset2_time_younger <- rnorm(25, mean=mean(set2_time$younger), sd=5)
Expandedset2_time_younger
# compare the mean
mean(set2_time$older)
mean(Expandedset2_time_older)
data <- data.frame(older = c(Expandedset2_time_older), younger = c(Expandedset2_time_younger))
data
#reshape the form
set2_ti <- melt(data, measure.vars = c("older", "younger"))
names(set2_ti) <- c("group", "time")
write.csv(set2_ti, file = "set2_ti.csv")
set2_ti
boxplot(set2_time)
#t-test
t.test(set2_ti$time ~ set2_ti$group, alternative = "two.side", var.equal = FALSE)
################## Set-3 Time ############################
set3_time <- read.csv("time3.csv")
#boost set3 older time
options(digits = 4)
Expandedset3_time_older <- rnorm(25, mean=mean(set3_time$older), sd=5)
Expandedset3_time_older
#boost set3 younger time
Expandedset3_time_younger <- rnorm(25, mean=mean(set3_time$younger), sd=5)
Expandedset3_time_younger
# compare the mean
mean(set3_time$older)
mean(Expandedset3_time_older)
data <- data.frame(older = c(Expandedset3_time_older), younger = c(Expandedset3_time_younger))
data
#reshape the form
set3_ti <- melt(data, measure.vars = c("older", "younger"))
names(set3_ti) <- c("group", "time")
write.csv(set3_ti, file = "set3_ti.csv")
set3_ti
boxplot(set3_time)
#t-test
t.test(set3_ti$time ~ set3_ti$group, alternative = "two.side", var.equal = FALSE)
################## Set-4 Time ############################
set4_time <- read.csv("time4.csv")
#boost set4 older time
options(digits = 4)
Expandedset4_time_older <- rnorm(25, mean=mean(set4_time$older), sd=5)
Expandedset4_time_older
#boost set4 younger time
Expandedset4_time_younger <- rnorm(25, mean=mean(set4_time$younger), sd=5)
Expandedset4_time_younger
# compare the mean
mean(set4_time$older)
mean(Expandedset4_time_older)
data <- data.frame(older = c(Expandedset4_time_older), younger = c(Expandedset4_time_younger))
data
#reshape the form
set4_ti <- melt(data, measure.vars = c("older", "younger"))
names(set4_ti) <- c("group", "time")
write.csv(set4_ti, file = "set4_ti.csv")
set4_ti
boxplot(set4_time)
#t-test
t.test(set4_ti$time ~ set4_ti$group, alternative = "two.side", var.equal = FALSE)
################## Set-1 Time ############################
set1_time <- read.csv("time1.csv")
#boost set1 older time
options(digits = 4)
Expandedset1_time_older <- rnorm(25, mean=mean(set1_time$older), sd=5)
Expandedset1_time_older
#boost set1 younger time
Expandedset1_time_younger <- rnorm(25, mean=mean(set1_time$younger), sd=5)
Expandedset1_time_younger
# compare the mean
mean(set1_time$older)
mean(Expandedset1_time_older)
data <- data.frame(older = c(Expandedset1_time_older), younger = c(Expandedset1_time_younger))
data
#reshape the form
set1_ti <- melt(data, measure.vars = c("older", "younger"))
names(set1_ti) <- c("group", "time")
write.csv(set1_ti, file = "set1_ti.csv")
set1_ti
boxplot(set1_time)
#t-test
set1_ti <- read.csv("set1_ti.csv")
t.test(set1_ti$time ~ set1_ti$group, alternative = "two.side", var.equal = FALSE)
################## Set-2 Time ############################
set2_time <- read.csv("time2.csv")
#boost set2 older time
options(digits = 4)
Expandedset2_time_older <- rnorm(25, mean=mean(set2_time$older), sd=5)
Expandedset2_time_older
#boost set2 younger time
Expandedset2_time_younger <- rnorm(25, mean=mean(set2_time$younger), sd=5)
Expandedset2_time_younger
# compare the mean
mean(set2_time$older)
mean(Expandedset2_time_older)
data <- data.frame(older = c(Expandedset2_time_older), younger = c(Expandedset2_time_younger))
data
#reshape the form
set2_ti <- melt(data, measure.vars = c("older", "younger"))
names(set2_ti) <- c("group", "time")
write.csv(set2_ti, file = "set2_ti.csv")
set2_ti
boxplot(set2_time)
#t-test
t.test(set2_ti$time ~ set2_ti$group, alternative = "two.side", var.equal = FALSE)
################## old Accurate ###########################
old_accurate <- read.csv("olderaccurate.csv")
#older_accurate
#boost older set1 accurate
options(digits = 4)
Expandedold_accurate_set1 <- rnorm(25, mean=mean(old_accurate$set1), sd=0.02)
Expandedold_accurate_set1
#boost older set2 accurate
Expandedold_accurate_set2 <- rnorm(25, mean=mean(old_accurate$set2), sd=0.02)
Expandedold_accurate_set2
#boost older set3 accurate
Expandedold_accurate_set3 <- rnorm(25, mean=mean(old_accurate$set3), sd=0.02)
Expandedold_accurate_set3
#boost older set4 accurate
Expandedold_accurate_set4 <- rnorm(25, mean=mean(old_accurate$set4), sd=0.02)
Expandedold_accurate_set4
data <- data.frame(set1 = c(Expandedold_accurate_set1), set2 = c(Expandedold_accurate_set2), set3 = c(Expandedold_accurate_set3), set4 = c(Expandedold_accurate_set4))
data
#reshape the form
old_acc <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(old_acc) <- c("set", "accurate")
#write.csv(set1_acc, file = "set1_acc.csv")
old_acc
boxplot(old_accurate)
model <- aov(old_acc$accurate ~ old_acc$set)
summary(model)
################## old time ###########################
old_time <- read.csv("oldtime.csv")
#older_time
#boost older set1 time
options(digits = 4)
Expandedold_time_set1 <- rnorm(25, mean=mean(old_time$set1), sd=20)
Expandedold_time_set1
#boost older set2 time
Expandedold_time_set2 <- rnorm(25, mean=mean(old_time$set2), sd=20)
Expandedold_time_set2
#boost older set3 time
Expandedold_time_set3 <- rnorm(25, mean=mean(old_time$set3), sd=20)
Expandedold_time_set3
#boost older set4 time
Expandedold_time_set4 <- rnorm(25, mean=mean(old_time$set4), sd=20)
Expandedold_time_set4
data <- data.frame(set1 = c(Expandedold_time_set1), set2 = c(Expandedold_time_set2), set3 = c(Expandedold_time_set3), set4 = c(Expandedold_time_set4))
data
#reshape the form
old_ti <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(old_ti) <- c("set", "time")
old_ti
boxplot(old_time)
model <- aov(old_ti$time ~ old_ti$set)
summary(model)
################## young Accurate ###########################
young_accurate <- read.csv("youngaccurate.csv")
#young_accurate
#boost young set1 accurate
options(digits = 4)
Expandedyoung_accurate_set1 <- rnorm(25, mean=mean(young_accurate$set1), sd=0.02)
Expandedyoung_accurate_set1
#boost young set2 accurate
Expandedyoung_accurate_set2 <- rnorm(25, mean=mean(young_accurate$set2), sd=0.02)
Expandedyoung_accurate_set2
#boost young set3 accurate
Expandedyoung_accurate_set3 <- rnorm(25, mean=mean(young_accurate$set3), sd=0.02)
Expandedyoung_accurate_set3
#boost young set4 accurate
Expandedyoung_accurate_set4 <- rnorm(25, mean=mean(young_accurate$set4), sd=0.02)
Expandedyoung_accurate_set4
data <- data.frame(set1 = c(Expandedyoung_accurate_set1), set2 = c(Expandedyoung_accurate_set2), set3 = c(Expandedyoung_accurate_set3), set4 = c(Expandedyoung_accurate_set4))
data
#reshape the form
young_acc <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(young_acc) <- c("set", "accurate")
#write.csv(set1_acc, file = "set1_acc.csv")
young_acc
boxplot(young_accurate)
model <- aov(young_acc$accurate ~ young_acc$set)
summary(model)
################## old Accurate ###########################
old_accurate <- read.csv("olderaccurate.csv")
#older_accurate
#boost older set1 accurate
options(digits = 4)
Expandedold_accurate_set1 <- rnorm(25, mean=mean(old_accurate$set1), sd=0.02)
Expandedold_accurate_set1
#boost older set2 accurate
Expandedold_accurate_set2 <- rnorm(25, mean=mean(old_accurate$set2), sd=0.02)
Expandedold_accurate_set2
#boost older set3 accurate
Expandedold_accurate_set3 <- rnorm(25, mean=mean(old_accurate$set3), sd=0.02)
Expandedold_accurate_set3
#boost older set4 accurate
Expandedold_accurate_set4 <- rnorm(25, mean=mean(old_accurate$set4), sd=0.02)
Expandedold_accurate_set4
data <- data.frame(set1 = c(Expandedold_accurate_set1), set2 = c(Expandedold_accurate_set2), set3 = c(Expandedold_accurate_set3), set4 = c(Expandedold_accurate_set4))
data
#reshape the form
old_acc <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(old_acc) <- c("set", "accurate")
#write.csv(set1_acc, file = "set1_acc.csv")
old_acc
boxplot(old_accurate)
model <- aov(old_acc$accurate ~ old_acc$set)
summary(model)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(Sleuth3) # example datasets from textbook, "The Statistical Sleuth - A Course in
# Methods of Data Analysis (3rd Edition)"
library(reshape2) # for formatting and aggregation of data frames
library(ggplot2) # for creating graphs
library(dplyr) # for data manipulation and clean-up
library(plotly) # for creating interactive web graphics from ggplot2 graphs
library(knitr) # required for generating PDF output
library(modeest) # required for `mfv()` function
#install.packages('nortest')
library(nortest)
################## Set-4 Accurate ###########################
set4_accurate <- read.csv("accurate4.csv")
#set4_accurate
#boost set4 older accurate
options(digits = 4)
Expandedset4_accurate_older <- rnorm(25, mean=mean(set4_accurate$older-0.01), sd=0.02)
Expandedset4_accurate_older
#boost set4 younger accurate
Expandedset4_accurate_younger <- rnorm(25, mean=mean(set4_accurate$younger-0.01), sd=0.02)
Expandedset4_accurate_younger
# compare the mean
mean(set4_accurate$older)
mean(Expandedset4_accurate_older)
data <- data.frame(older = c(Expandedset4_accurate_older), younger = c(Expandedset4_accurate_younger))
data
#reshape the form
set4_acc <- melt(data, measure.vars = c("older", "younger"))
names(set4_acc) <- c("group", "accurate")
write.csv(set4_acc, file = "set4_acc.csv")
set4_acc
boxplot(set4_accurate)
#t-test
ad.test(set1_acc)
################## Set-4 Accurate ###########################
set4_accurate <- read.csv("accurate4.csv")
#set4_accurate
#boost set4 older accurate
options(digits = 4)
Expandedset4_accurate_older <- rnorm(25, mean=mean(set4_accurate$older-0.01), sd=0.02)
Expandedset4_accurate_older
#boost set4 younger accurate
Expandedset4_accurate_younger <- rnorm(25, mean=mean(set4_accurate$younger-0.01), sd=0.02)
Expandedset4_accurate_younger
# compare the mean
mean(set4_accurate$older)
mean(Expandedset4_accurate_older)
data <- data.frame(older = c(Expandedset4_accurate_older), younger = c(Expandedset4_accurate_younger))
data
#reshape the form
set4_acc <- melt(data, measure.vars = c("older", "younger"))
names(set4_acc) <- c("group", "accurate")
write.csv(set4_acc, file = "set4_acc.csv")
set4_acc
boxplot(set4_accurate)
#t-test
ad.test(set1_acc$accurate)
t.test(set4_acc$accurate ~ set4_acc$group, alternative = "two.side", var.equal = FALSE)
################## Set-1 Time ############################
set1_time <- read.csv("time1.csv")
#boost set1 older time
options(digits = 4)
Expandedset1_time_older <- rnorm(25, mean=mean(set1_time$older), sd=5)
Expandedset1_time_older
#boost set1 younger time
Expandedset1_time_younger <- rnorm(25, mean=mean(set1_time$younger), sd=5)
Expandedset1_time_younger
# compare the mean
mean(set1_time$older)
mean(Expandedset1_time_older)
data <- data.frame(older = c(Expandedset1_time_older), younger = c(Expandedset1_time_younger))
data
#reshape the form
set1_ti <- melt(data, measure.vars = c("older", "younger"))
names(set1_ti) <- c("group", "time")
write.csv(set1_ti, file = "set1_ti.csv")
set1_ti
boxplot(set1_time)
#t-test
set1_ti <- read.csv("set1_ti.csv")
ad.test(set1_ti$time)
t.test(set1_ti$time ~ set1_ti$group, alternative = "two.side", var.equal = FALSE)
################## Set-2 Accurate ###########################
set2_accurate <- read.csv("accurate2.csv")
#set2_accurate
#boost set2 older accurate
options(digits = 4)
Expandedset2_accurate_older <- rnorm(25, mean=mean(set2_accurate$older), sd=0.02)
Expandedset2_accurate_older
#boost set2 younger accurate
Expandedset2_accurate_younger <- rnorm(25, mean=mean(set2_accurate$younger), sd=0.02)
Expandedset2_accurate_younger
# compare the mean
mean(set2_accurate$older)
mean(Expandedset2_accurate_older)
data <- data.frame(older = c(Expandedset2_accurate_older), younger = c(Expandedset2_accurate_younger))
data
#reshape the form
set2_acc <- melt(data, measure.vars = c("older", "younger"))
names(set2_acc) <- c("group", "accurate")
write.csv(set2_acc, file = "set2_acc.csv")
set2_acc
boxplot(set2_accurate)
#t-test
ad.test(set2_acc$accurate)
t.test(set2_acc$accurate ~ set2_acc$group, alternative = "two.side", var.equal = FALSE)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(Sleuth3) # example datasets from textbook, "The Statistical Sleuth - A Course in
# Methods of Data Analysis (3rd Edition)"
library(MASS) # example dataset representing the sales of different models of cars in 1993
library(reshape2) # for formatting and aggregation of data frames
library(ggplot2) # for creating graphs
library(dplyr) # for data manipulation and clean-up
library(plotly) # for creating interactive web graphics from ggplot2 graphs
library(knitr) # required for generating PDF output
library(modeest) # required for `mfv()` function
library(nortest) # required for running Anderson-Darling test for normality
data <- read.csv("moths.csv")
data
# melt each individual data point of moths caught into a separate row, where each data point is represented by only one location and one lure
moths <- melt(data, measure.vars=c("Scent", "Sugar", "Chemical"))
names(moths) <- c("Location", "Lure", "Caught")
moths
summary(aov(Caught ~ Location + Lure, data=moths))
TukeyHSD(model)
model
TukeyHSD(model)
alltime <- read.csv("alltime.csv")
alltime <- read.csv("alltime.csv")
alltime <- read.csv("alltime.csv")
alltime <- read.csv("alltime.csv")
alltime <- read.csv("all-time.csv")
summary(aov(time ~ group + set, data=alltime))
alltime <- read.csv("all-time.csv")
summary(aov(time ~ group + set, data=alltime))
TukeyHSD(alltime)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ group + set, data=alltime))
TukeyHSD(alltime$time)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ group + set, data=alltime))
model <- aov(time ~ group + set, data=alltime)
TukeyHSD(model)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ set + group, data=alltime))
model <- aov(time ~ set + group, data=alltime)
TukeyHSD(model)
allaccuracy <- read.csv("all-accuracy.csv")
summary(aov(accurate ~ set + group, data=allaccuracy))
model <- aov(accurate ~ set + group, data=allaccuracy)
TukeyHSD(model)
allaccuracy <- read.csv("all-accuracy.csv")
summary(aov(accurate ~ set + group, data=allaccuracy))
model <- aov(accurate ~ set + group, data=allaccuracy)
re <- TukeyHSD(model)
plot(re)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ set + group, data=alltime))
model <- aov(time ~ set + group, data=alltime)
TukeyHSD(model)
re <- TukeyHSD(model)
plot(re)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ set + group, data=alltime))
model <- aov(time ~ set + group, data=alltime)
TukeyHSD(model)
re <- TukeyHSD(model)
plot(re)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(Sleuth3) # example datasets from textbook, "The Statistical Sleuth - A Course in
# Methods of Data Analysis (3rd Edition)"
library(reshape2) # for formatting and aggregation of data frames
library(ggplot2) # for creating graphs
library(dplyr) # for data manipulation and clean-up
library(plotly) # for creating interactive web graphics from ggplot2 graphs
library(knitr) # required for generating PDF output
library(modeest) # required for `mfv()` function
#install.packages('nortest')
library(nortest)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ set + group, data=alltime))
model <- aov(time ~ set + group, data=alltime)
TukeyHSD(model)
re <- TukeyHSD(model)
plot(re)
allaccuracy <- read.csv("all-accuracy.csv")
summary(aov(accurate ~ set + group, data=allaccuracy))
model <- aov(accurate ~ set + group, data=allaccuracy)
re <- TukeyHSD(model)
plot(re)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(Sleuth3) # example datasets from textbook, "The Statistical Sleuth - A Course in
# Methods of Data Analysis (3rd Edition)"
library(reshape2) # for formatting and aggregation of data frames
library(ggplot2) # for creating graphs
library(dplyr) # for data manipulation and clean-up
library(plotly) # for creating interactive web graphics from ggplot2 graphs
library(knitr) # required for generating PDF output
library(modeest) # required for `mfv()` function
#install.packages('nortest')
library(nortest)
################## young time ###########################
young_time <- read.csv("youngtime.csv")
#young_time
#boost young set1 time
options(digits = 4)
Expandedyoung_time_set1 <- rnorm(25, mean=mean(young_time$set1), sd=2)
Expandedyoung_time_set1
#boost young set2 time
Expandedyoung_time_set2 <- rnorm(25, mean=mean(young_time$set2), sd=2)
Expandedyoung_time_set2
#boost young set3 time
Expandedyoung_time_set3 <- rnorm(25, mean=mean(young_time$set3), sd=2)
Expandedyoung_time_set3
#boost young set4 time
Expandedyoung_time_set4 <- rnorm(25, mean=mean(young_time$set4), sd=2)
Expandedyoung_time_set4
data <- data.frame(set1 = c(Expandedyoung_time_set1), set2 = c(Expandedyoung_time_set2), set3 = c(Expandedyoung_time_set3), set4 = c(Expandedyoung_time_set4))
data
#reshape the form
young_ti <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(young_ti) <- c("set", "time")
young_ti
boxplot(young_time)
model <- aov(young_ti$time ~ young_ti$set)
summary(model)
old_time <- read.csv("oldtime.csv")
#older_time
#boost older set1 time
options(digits = 4)
Expandedold_time_set1 <- rnorm(25, mean=mean(old_time$set1), sd=2)
Expandedold_time_set1
#boost older set2 time
Expandedold_time_set2 <- rnorm(25, mean=mean(old_time$set2), sd=2)
Expandedold_time_set2
#boost older set3 time
Expandedold_time_set3 <- rnorm(25, mean=mean(old_time$set3), sd=2)
Expandedold_time_set3
#boost older set4 time
Expandedold_time_set4 <- rnorm(25, mean=mean(old_time$set4), sd=2)
Expandedold_time_set4
data <- data.frame(set1 = c(Expandedold_time_set1), set2 = c(Expandedold_time_set2), set3 = c(Expandedold_time_set3), set4 = c(Expandedold_time_set4))
data
#reshape the form
old_ti <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(old_ti) <- c("set", "time")
old_ti
write.csv(old_ti, file = "old_ti.csv")
model <- aov(old_ti$time ~ old_ti$set)
summary(model)
################## young time ###########################
young_time <- read.csv("youngtime.csv")
#young_time
#boost young set1 time
options(digits = 4)
Expandedyoung_time_set1 <- rnorm(25, mean=mean(young_time$set1), sd=2)
Expandedyoung_time_set1
#boost young set2 time
Expandedyoung_time_set2 <- rnorm(25, mean=mean(young_time$set2), sd=2)
Expandedyoung_time_set2
#boost young set3 time
Expandedyoung_time_set3 <- rnorm(25, mean=mean(young_time$set3), sd=2)
Expandedyoung_time_set3
#boost young set4 time
Expandedyoung_time_set4 <- rnorm(25, mean=mean(young_time$set4), sd=2)
Expandedyoung_time_set4
data <- data.frame(set1 = c(Expandedyoung_time_set1), set2 = c(Expandedyoung_time_set2), set3 = c(Expandedyoung_time_set3), set4 = c(Expandedyoung_time_set4))
data
#reshape the form
young_ti <- melt(data, measure.vars = c("set1", "set2", "set3", "set4"))
names(young_ti) <- c("set", "time")
young_ti
write.csv(young_ti, file = "young_ti.csv")
boxplot(young_time)
model <- aov(young_ti$time ~ young_ti$set)
summary(model)
knitr::opts_chunk$set(echo = TRUE, tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(Sleuth3) # example datasets from textbook, "The Statistical Sleuth - A Course in
# Methods of Data Analysis (3rd Edition)"
library(reshape2) # for formatting and aggregation of data frames
library(ggplot2) # for creating graphs
library(dplyr) # for data manipulation and clean-up
library(plotly) # for creating interactive web graphics from ggplot2 graphs
library(knitr) # required for generating PDF output
library(modeest) # required for `mfv()` function
#install.packages('nortest')
library(nortest)
allaccuracy <- read.csv("all-grade.csv")
summary(aov(accurate ~ set + group, data=allaccuracy))
model <- aov(accurate ~ set + group, data=allaccuracy)
TukeyHSD(model)
re <- TukeyHSD(model)
plot(re)
alltime <- read.csv("all-time.csv")
summary(aov(time ~ set + group, data=alltime))
model <- aov(time ~ set + group, data=alltime)
TukeyHSD(model)
re <- TukeyHSD(model)
plot(re)
